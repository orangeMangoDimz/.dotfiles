// Place your key bindings in this file to override the defaultsauto[]
[
	{
		"key": "ctrl+j",
		"command": "workbench.action.navigateDown"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.navigateUp"
	},
	{
		"key": "ctrl+h",
		"command": "workbench.action.navigateLeft"
	},
	{
		"key": "ctrl+l",
		"command": "workbench.action.navigateRight"
	},
	{
		"key": "space f f",
		"command": "workbench.action.quickOpen",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "alt+shift+f",
		"command": "editor.action.formatDocument",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "space b a",
		"command": "vscode-harpoon.addEditor",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "space b e",
		"command": "vscode-harpoon.editEditors",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "space b l",
		"command": "vscode-harpoon.editorQuickPick",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	// Pannel
	{
		"key": "shift+l",
		"command": "workbench.action.increaseViewSize",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "shift+h",
		"command": "workbench.action.decreaseViewSize",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	// Harpoon extension
	{
		"key": "space 1",
		"command": "vscode-harpoon.gotoEditor1",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "space 2",
		"command": "vscode-harpoon.gotoEditor2",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "space 3",
		"command": "vscode-harpoon.gotoEditor3",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "space 4",
		"command": "vscode-harpoon.gotoEditor4",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "space 5",
		"command": "vscode-harpoon.gotoEditor5",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	{
		"key": "space 6",
		"command": "vscode-harpoon.gotoEditor6",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},

	// Navigation
	{
		"key": "shift+k",
		"command": "editor.action.showHover",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "space c a",
		"command": "editor.action.codeAction",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "space c r",
		"command": "editor.action.rename",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "space x",
		"command": "workbench.action.closeActiveEditor",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},

	// VIM
	{
		"key": "g g",
		"command": "cursorTop",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "g d",
		"command": "editor.action.revealDefinition",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "g r",
		"command": "editor.action.goToReferences",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "g b",
		"command": "workbench.action.navigateBack",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "space f w",
		"command": "workbench.action.findInFiles",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "r",
		"command": "renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "c",
		"command": "filesExplorer.copy",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "p",
		"command": "filesExplorer.paste",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "x",
		"command": "filesExplorer.cut",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "d",
		"command": "deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "space h",
		"command": "runCommands",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
		"args": {
			"commands": ["explorer.openToSide", "explorer.openAndPassFocus"]
		}
	},
	{
		"key": "space v",
		"command": "runCommands",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
		"args": {
			"commands": [
				"workbench.action.splitEditorDown",
				"explorer.openAndPassFocus"
			]
		}
	},
	{
		"key": "ctrl+n",
		"command": "-workbench.action.files.newUntitledFile"
	},
	{
		"key": "ctrl+b",
		"command": "workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},

	// Pretter
	{
		"key": "space f m",
		"command": "editor.action.formatDocument",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},

	// Terminal
	{
		"key": "ctrl+shift+f",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+i",
		"command": "workbench.panel.chat",
		"when": "workbench.panel.chat.view.copilot.active"
	},
	{
		"key": "ctrl+shift+j",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+shift+k",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus"
	},
	{
		"key": "space f c",
		"command": "workbench.files.action.collapseExplorerFolders",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !inQuickOpen"
	},
	// Copilot
	{
		"key": "ctrl+j",
		"command": "editor.action.inlineSuggest.commit",
		"when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+j",
		"command": "editor.action.inlineSuggest.commit",
		"when": "inInlineEditsPreviewEditor"
	},
	{
		"key": "tab",
		"command": "-editor.action.inlineSuggest.commit",
		"when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
	},
	{
		"key": "tab",
		"command": "-editor.action.inlineSuggest.commit",
		"when": "inInlineEditsPreviewEditor"
	},
	{
		"key": "space w w",
		"command": "editor.action.toggleWordWrap",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !terminalFocus"
	},
	{
		"key": "alt+z",
		"command": "-editor.action.toggleWordWrap"
	},
	{
		"key": "ctrl+shift+h",
		"command": "workbench.action.chat.history"
	},
	{
		"key": "space d b",
		"command": "workbench.action.closeAllEditors",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "ctrl+shift+j",
		"command": "-aiSettings.action.open",
		"when": "!isSettingsPaneOpen"
	},
	{
		"key": "ctrl+shift+j",
		"command": "-aiSettings.action.openhidden",
		"when": "!isSettingsPaneOpen"
	},
	{
		"key": "ctrl+shift+j",
		"command": "-workbench.action.search.toggleQueryDetails",
		"when": "inSearchEditor || searchViewletFocus"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "alt+l",
		"command": "-editor.action.inlineDiffs.nextDiffFile",
		"when": "editorTextFocus && @inlineDiffs.nextDiffFile.hasInlineDiffsInAnyEditor"
	},
	{
		"key": "alt+l alt+o",
		"command": "-extension.liveServer.goOnline",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+l alt+c",
		"command": "-extension.liveServer.goOffline",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-composer.newAgentChat"
	},
	{
		"key": "alt+l",
		"command": "composer.startComposerPrompt"
	},
	{
		"key": "ctrl+i",
		"command": "-composer.startComposerPrompt"
	},
	{
		"key": "ctrl+alt+i",
		"command": "-workbench.action.chat.open",
		"when": "chatPanelParticipantRegistered || chatSetupInstalled"
	},
	{
		"key": "ctrl+shift+j",
		"command": "-find-it-faster.findFiles"
	},
	{
		"key": "ctrl+shift+u",
		"command": "-find-it-faster.findWithinFiles"
	},
	{
		"key": "ctrl+shift+alt+u",
		"command": "-find-it-faster.findWithinFilesWithType"
	}
]
